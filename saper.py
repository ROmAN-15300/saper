import tkinter as tk
import random
from tkinter import messagebox


class Minesweeper:
    def __init__(self, master, rows=15, cols=15, mines=30):
        self.master = master
        self.rows = rows
        self.cols = cols
        self.mines = mines
        self.buttons = {}
        self.board = []
        self.game_over_button = None  # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞"
        self.game_over_flag = False  # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.window_width = 800
        self.window_height = 800
        self.cell_width = self.window_width // self.cols
        self.cell_height = self.window_height // self.rows

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–∫–Ω–∞
        self.master.geometry(f"{self.window_width}x{self.window_height}")
        self.master.title("–°–∞–ø—ë—Ä")

        self.create_widgets()
        self.create_board()
        self.place_mines()
        self.calculate_numbers()

    def create_widgets(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        for r in range(self.rows):
            for c in range(self.cols):
                button = tk.Button(
                    self.master,
                    width=self.cell_width // 10,
                    height=self.cell_height // 20,
                    font=("Arial", self.cell_width // 5),
                    command=lambda r=r, c=c: self.reveal_cell(r, c)
                )
                button.bind("<Button-3>", lambda e, r=r, c=c: self.flag_cell(r, c))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–ª–∞–≥–∞
                button.place(x=c * self.cell_width, y=r * self.cell_height, width=self.cell_width, height=self.cell_height)
                self.buttons[(r, c)] = button

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã, —Å–∫—Ä—ã—Ç–∞—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.game_over_button = tk.Button(
            self.master,
            text="üîÑ",
            font=("Arial", 20),
            command=self.restart_game,
            bg="lightgray",
            bd=2
        )
        # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        self.game_over_button.place_forget()

    def create_board(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π –¥–æ—Å–∫–∏
        self.board = [[0 for _ in range(self.cols)] for _ in range(self.rows)]

    def place_mines(self):
        # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –º–∏–Ω –Ω–∞ –¥–æ—Å–∫–µ
        count = 0
        while count < self.mines:
            r = random.randint(0, self.rows - 1)
            c = random.randint(0, self.cols - 1)
            if self.board[r][c] == 0:
                self.board[r][c] = -1
                count += 1

    def calculate_numbers(self):
        # –ü–æ–¥—Å—á–µ—Ç —á–∏—Å–µ–ª –≤–æ–∫—Ä—É–≥ –º–∏–Ω
        for r in range(self.rows):
            for c in range(self.cols):
                if self.board[r][c] == -1:
                    continue
                self.board[r][c] = sum(
                    self.board[nr][nc] == -1
                    for nr in range(r - 1, r + 2)
                    for nc in range(c - 1, c + 2)
                    if 0 <= nr < self.rows and 0 <= nc < self.cols
                )

    def reveal_cell(self, r, c):
        # –û—Ç–∫—Ä—ã—Ç–∏–µ —è—á–µ–π–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ
        if self.game_over_flag:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞
            return

        if self.board[r][c] == -1:
            self.buttons[(r, c)].config(text="üí£", bg="red", font=("Arial", self.cell_width // 5))
            self.game_over()
        elif self.board[r][c] > 0:
            self.buttons[(r, c)].config(
                text=str(self.board[r][c]),
                state="disabled",
                bg="#d3d3d3",
                font=("Arial", self.cell_width // 5)
            )
        else:
            self.buttons[(r, c)].config(state="disabled", bg="#d3d3d3")
            for nr in range(r - 1, r + 2):
                for nc in range(c - 1, c + 2):
                    if 0 <= nr < self.rows and 0 <= nc < self.cols and self.buttons[(nr, nc)]["state"] != "disabled":
                        self.reveal_cell(nr, nc)

    def flag_cell(self, r, c):
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ –Ω–∞ —è—á–µ–π–∫–µ
        current_text = self.buttons[(r, c)].cget("text")
        if current_text == "":
            self.buttons[(r, c)].config(text="üö©", fg="red", font=("Arial", self.cell_width // 5))
        elif current_text == "üö©":
            self.buttons[(r, c)].config(text="")

    def game_over(self):
        # –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
        self.game_over_flag = True  # –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
        for r in range(self.rows):
            for c in range(self.cols):
                if self.board[r][c] == -1:
                    self.buttons[(r, c)].config(text="üí£", bg="red", font=("Arial", self.cell_width // 5))
        messagebox.showinfo("Game Over", "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ü–µ–Ω—Ç—Ä–µ —ç–∫—Ä–∞–Ω–∞
        self.game_over_button.place(relx=0.5, rely=0.5, anchor="center")

    def restart_game(self):
        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
        self.game_over_flag = False
        for button in self.buttons.values():
            button.config(text="", state="normal", bg="SystemButtonFace")
        self.board = []
        self.create_board()
        self.place_mines()
        self.calculate_numbers()
        self.game_over_button.place_forget()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
